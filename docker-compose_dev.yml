version: '3.8'

services:
  db:
    container_name: pg_movies
    build:
      context: ./sqlite_to_postgres/postgres
    env_file:
      - .env
#    expose:
#      - 5432
    ports:
      - ${POSTGRES_PORT_OUT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: always

  load_data:
    container_name: to_postgres
    build:
      context: ./sqlite_to_postgres/sqlite_to_postgres
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  elasticsearch:
    container_name: es-movies
    image: elasticsearch:8.9.0
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
      - bootstrap.memory_lock=true
      - ingest.geoip.downloader.enabled=false
      - logger.level=WARN
#    expose:
#      - ${ES_PORT}
    ports:
      - ${ES_PORT}:${ES_PORT}
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    container_name: redis-movies
    image: redis:7.2.3-alpine3.19
#    expose:
#      - ${REDIS_PORT}
    ports:
      - ${REDIS_PORT_OUT}:${REDIS_PORT}
    volumes:
      - redis_data:/data
    restart: always
    command: redis-server --save 60 1 --loglevel notice

  etl:
    container_name: etl_movies
    build:
      context: ./etl
    env_file:
      - .env
    volumes:
      - etl_log:/app/logs
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: always

  movies_fastapi:
    container_name: movies_fastapi
    build:
      context: ./movies_fastapi
    env_file:
      - .env
    environment:
      - PROJECT_HOST=localhost
      - PROJECT_PORT=8000
    #if there are conflicting variables defined both in the 'environment' section and in the '.env' file, the values in the 'environment' section will take precedence.
    ports:
      - ${PROJECT_PORT}:${PROJECT_PORT}
    volumes:
      - fastapi_log:/usr/src/movies_fastapi/logs
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: always
    command: gunicorn -w 4 -k uvicorn.workers.UvicornWorker -b :8000 main:app


volumes:
  postgres_data:
  etl_log:
  redis_data:
  elastic_data:
  fastapi_log:
